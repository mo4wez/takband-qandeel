# Generated by Django 5.2.3 on 2025-07-01 21:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('birth_year', models.IntegerField(blank=True, null=True)),
                ('death_year', models.IntegerField(blank=True, null=True)),
                ('biography', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='authors/')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Poem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('intro', models.TextField(blank=True)),
                ('meter', models.CharField(blank=True, help_text='وزن (poetic meter)', max_length=100, null=True)),
                ('rhyme', models.CharField(blank=True, help_text='قافیه', max_length=100, null=True)),
                ('date_written', models.CharField(blank=True, max_length=50)),
                ('order_in_work', models.PositiveIntegerField(default=0)),
                ('raw_text', models.TextField(blank=True, help_text='Paste your full poem here (2 lines per beyt)')),
                ('is_published', models.BooleanField(default=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order_in_work'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('genre', models.CharField(blank=True, choices=[('epic', 'Epic'), ('ghazal', 'Ghazal'), ('rubai', 'Rubāʿī'), ('folk', 'Folk'), ('free', 'Free Verse'), ('qasida', 'Qasida'), ('other', 'Other')], help_text='Optional: Epic, Rubāʿī, etc.', max_length=50)),
                ('dialect', models.CharField(blank=True, help_text='Optional: Southern, Eastern Balochi...', max_length=100)),
                ('era', models.CharField(blank=True, help_text='Optional: Classical, Modern, Unknown', max_length=100)),
                ('notes', models.TextField(blank=True, help_text='Scholarly commentary or section intro')),
                ('sources', models.TextField()),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorAlias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aliases', to='literature.author')),
            ],
        ),
        migrations.CreateModel(
            name='Glossary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100)),
                ('meaning', models.TextField()),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('poem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glossary', to='literature.poem')),
            ],
        ),
        migrations.CreateModel(
            name='PoemLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_number', models.PositiveIntegerField(help_text='Order of line in entire poem.')),
                ('stanza', models.PositiveIntegerField(default=1, help_text='Logical group or verse.')),
                ('stanza_type', models.CharField(choices=[('couplet', 'Couplet (2 lines per verse)'), ('quatrain', 'Quatrain (4 lines per verse)'), ('free', 'Free Verse (arbitrary line groups)'), ('other', 'Other')], default='couplet', max_length=30)),
                ('text', models.TextField()),
                ('transliteration', models.TextField(blank=True, null=True)),
                ('translation', models.TextField(blank=True, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('poem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='literature.poem')),
            ],
            options={
                'ordering': ['line_number'],
            },
        ),
        migrations.AddField(
            model_name='poem',
            name='section',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='poems', to='literature.section'),
        ),
        migrations.AddField(
            model_name='section',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='literature.work'),
        ),
        migrations.AddField(
            model_name='poem',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poems', to='literature.work'),
        ),
        migrations.CreateModel(
            name='WorkGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workgroups', to='literature.author')),
            ],
        ),
        migrations.AddField(
            model_name='work',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='works', to='literature.workgroup'),
        ),
        migrations.CreateModel(
            name='PoemTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_modified', models.DateTimeField(auto_now=True)),
                ('poem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='literature.poem')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='literature.tag')),
            ],
            options={
                'unique_together': {('poem', 'tag')},
            },
        ),
    ]
